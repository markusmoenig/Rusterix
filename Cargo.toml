[package]
name = "rusterix"
version = "0.2.8"
edition = "2024"
description = "Rusterix is a fast software renderer and game engine."
license = "Apache-2.0 AND MIT"
repository = "https://github.com/markusmoenig/Rusterix"
keywords = ["software", "rendering", "graphics", "game", "engine"]

[workspace]
members = [".", "rusteria", "rsia", "codegridfx/lib"]

[workspace.dependencies]
theframework = { version = "0.1.40", features = [
    "ui",
], git = "https://github.com/markusmoenig/theframework" }
# theframework = "0.1.33"
# theframework = { path = "../TheFramework", default-features = true }

scenevm = { version = "0.1", git = "https://github.com/markusmoenig/SceneVM" }

# theframework = { path = "../TheFramework", features = [
#     "ui",
# ], default-features = true }

# scenevm = { path = "../SceneVM" }

[dependencies]
theframework.workspace = true
scenevm.workspace = true

codegridfx = { path = "codegridfx/lib", default-features = true }
png = "0.17"

# rustpython = { version = "0.4.0", features = [
#     "stdlib",
#     "threading",
#     "freeze-stdlib",
# ], default-features = false }

rustpython = { features = [
    "stdlib",
    "threading",
    "freeze-stdlib",
], default-features = false, git = "https://github.com/RustPython/RustPython" }

rustpython-vm = { git = "https://github.com/RustPython/RustPython", default-features = false }

fontdue = "0.9.3"
rayon = "1.10"
vek = { version = "0.17.1", default-features = true }
earcutr = "0.5"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
image = "0.25.5"
walkdir = "2.5.0"
crossbeam-channel = "0.5.14"
bincode = "1.3.3"
rand = "0.9"
pathfinding = "4.13.1"
ordered-float = "5.0"
toml = "0.9.5"
rust-embed = { version = "8.5", default-features = true, features = [
    "include-exclude",
] }
indexmap = "2.7.1"
regex = "1.11.1"
instant = { version = "0.1", features = ["wasm-bindgen"] }
bvh = "0.11"
nalgebra = "0.33.2"
vectorize = "0.2.0"
noiselib = "0.2.4"
fast-srgb8 = "1.0.0"
crossbeam = "0.8.4"
rustc-hash = "2.1.1"
rusteria = { version = "0.1.0", path = "rusteria" }

[dependencies.uuid]
version = "1.1.2"
features = [
    "v4",                # Lets you generate random UUIDs
    "fast-rng",          # Use a faster (but still sufficiently random) RNG
    "macro-diagnostics", # Enable better diagnostics for compile-time UUIDs
    "serde",
    "js",
]

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
web-sys = { version = "0.3", features = ['Window'] }
console_error_panic_hook = "0.1"
instant = { version = "0.1", features = ["wasm-bindgen"] }

[dev-dependencies]
criterion = { version = "0.5.1", features = ["html_reports"] }

[[bench]]
name = "rasterize_map"
harness = false

[features]
single_thread = []
default = []
